# Findings {part-2}

```{r}
#| label: setup

library(tidyverse)
library(kableExtra)
library(hdatools)
library(sf)
library(geojsonsf)
library(ggtext)
library(scales)
library(leaflet)
library(htmlwidgets)
library(classInt)

```

## Findings

Out of the over 4 million parcels in Virginia, 22,453 were identified as likely owned by a faith-based organization --- with a 95% confidence level that the true accuracy of the entire dataset lies between 99.03% and 100%. These findings were based on a keyword search with a process of retention and elimination based on known faith-based and secular entities. Some faith-based properties could be absent from the analysis due to terms or phrases not accounted for. However, the following represents a significant, if not an overwhelming majority, of parcels owned by faith-based organizations in the Commonwealth of Virginia. In total, these parcels amount to 74,116 acres of land. To put this into context, the City of Richmond is roughly 40,000 acres, meaning the identified parcels amount to nearly twice the size of Richmond.

### By Planning District Commission

To investigate geographic patterns further, HFV utilized Virginia's 21 planning district commissions (PDCs) to assign parcels to a geographic region. This is helpful because not all jurisdictions in Virginia are part of a metropolitan or micropolitan statistical area, whereas all jurisdictions are represented by at least one of the 21 PDCs. In addition, PDC boundaries represent an area wherein there are distinct socioeconomic patterns. 

```{r}
#| label: fig-pdc-map
#| fig-cap: "Map of Virginia PDCs"

# Insert map of Virginia Planning District Commissions


```

The Hampton Roads region exceeds its peers in the number of parcels owned by faith-based organizations at 3,332. The LENOWISCO and PlanRVA regions follow at just over 1,000 fewer parcels - 2,050 and 2,006, respectively. 

```{r}
#| label: fig-pdc
#| fig-cap: "Total faith-based owned parcels by PDC"

faith_mapped <- read_rds("data/faith_mapped.rds") |> 
  st_drop_geometry() |> 
  distinct(ll_uuid, .keep_all = TRUE)


faith_summary_pdc <- faith_mapped |> 
  group_by(pdc) |> 
  summarise(total_acres = as.numeric(format(sum(acres), scientific = FALSE)),
            avg_parcel_size = mean(acres),
            count = as.numeric(n_distinct(ll_uuid)))

ggplot(faith_summary_pdc,
       aes(x = reorder(pdc, count),
           y = count)) +
  geom_col(fill = "#011E41") +
  geom_text(
    aes(label = scales::comma(round(count, 0))), 
    color = "#011E41", 
    hjust = -0.2
    ) +
  coord_flip() +
  theme_hfv() +
  scale_y_continuous(
    expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Total faith-based owned parcels",
       caption = "**Source:** HousingForward Virginia & LOVELAND Technologies, Regrid 2024 Dataset.")


```

These rankings change when we look specifically at acreage. The Northern Shenandoah Valley region rises to the top of list at just over 14,000 acres of land owned by faith-based organizations, while the PlanRVA region follows at 10,246. Hampton Roads still stays in the top three, but comes in at 7,602 acres. The LENOWISCO region falls down the list to the 17th region with the most acreage at only 1,606 acres. While the LENOWISCO region contains significantly more parcels than several of its peers, those parcels are undoubtedly smaller in area.

```{r}
#| label: fig-pdc-acres
#| fig-cap: "Total acres of faith-based owned parcels by PDC"

faith_mapped <- read_rds("data/faith_mapped.rds") |> 
  st_drop_geometry() |> 
  distinct(ll_uuid, .keep_all = TRUE)

faith_summary_pdc <- faith_mapped |> 
  group_by(pdc) |> 
  summarise(total_acres = as.numeric(format(sum(acres), scientific = FALSE)),
            avg_parcel_size = mean(acres),
            count = as.numeric(n_distinct(ll_uuid)))

# sum(faith_summary_pdc$total_acres)

ggplot(faith_summary_pdc,
       aes(x = reorder(pdc, total_acres),
           y = total_acres)) +
  geom_col(fill = "#011E41") +
  geom_text(
    aes(label = scales::comma(round(total_acres, 0))), 
    color = "#011E41", 
    hjust = -0.2
    ) +
  coord_flip() +
  theme_hfv() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Total acres of faith organization owned land",
       caption = "**Source:** HousingForward Virginia & LOVELAND Technologies, Regrid 2024 Dataset.")

```

Exploring individual parcel size gives a better understanding of opportunities for viable residential development. To do this, we explore the median parcel size rather than the average in order to account for outliers that may skew the results. By looking at the median parcel size, the rankings change once again. The Thomas Jefferson region has the largest parcels with a median size of 1.74 acres - just under the size of a FIFA standard soccer field (1.76 acres). The Northern Neck follows at 1.55 acres and the next six regions sit between 1.3 and 0.92 acres. The remaining regions have a median parcel size below 0.75 acres - with the LENOWISCO region have the smallest median parcel size at under 0.10 acres.

```{r}
#| label: fig-pdc-med-acres
#| fig-cap: "Median parcel size by PDC"

faith_mapped <- read_rds("data/faith_mapped.rds") |> 
  st_drop_geometry() |> 
  distinct(ll_uuid, .keep_all = TRUE)

faith_summary_pdc <- faith_mapped |> 
  group_by(pdc) |> 
  summarise(total_acres = as.numeric(format(sum(acres), scientific = FALSE)),
            med_parcel_size = median(acres),
            count = as.numeric(n_distinct(ll_uuid)))

ggplot(faith_summary_pdc,
       aes(x = reorder(pdc, med_parcel_size),
           y = med_parcel_size)) +
  geom_col(fill = "#40c0c0") +
    geom_text(aes(label = round(med_parcel_size, 2)), color = "#FFFFFF", hjust = 1.1) +
  coord_flip() +
  theme_hfv() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1)), limits = c(0,2))  +
  labs(title = "Median parcel size of faith-based owned land by PDC",
       caption = "**Source:** HousingForward Virginia & LOVELAND Technologies, Regrid 2024 Dataset.")



```

At the local level, we can identify jurisdictions with significant acreage of faith-based owned parcels. Based on median parcel size, Goochland County leads its nearest peer by over 1.5 acres with a median parcel size of 7.18 acres. Cumberland County comes in at 5.5 acres. The PlanRVA region is well-represented among jurisdictions with large median parcel sizes - with Goochland, Powhatan, Henrico, New Kent, Hanover, and Charles City represented (6 of the 8 counties/cities within the PDC). 


```{r}
#| label: fig-local-count
#| fig-cap: "Top 15: Median parcel size by jurisdiction"

faith_mapped <- read_rds("data/faith_mapped.rds")|> 
  st_drop_geometry() |> 
  distinct(ll_uuid, .keep_all = TRUE)

faith_summary_local <- faith_mapped %>% 
  group_by(jurisdiction, pdc) %>% 
  summarise(
    total_acres = sum(acres, na.rm = TRUE),
    med_parcel_size = median(acres, na.rm = TRUE),
    count = n_distinct(ll_uuid),
    .groups = "drop"
  ) %>% 
  mutate(
    jurisdiction = str_remove(jurisdiction, " County"),
    total_acres = round(total_acres, 2),
    med_parcel_size = round(med_parcel_size, 2)
  ) %>% 
  arrange(desc(med_parcel_size)) %>%
  slice_head(n = 20)

ggplot(faith_summary_local,
       aes(x = reorder(jurisdiction, med_parcel_size),
           y = med_parcel_size,
           fill = pdc)) +
  geom_col() +
  geom_text(aes(label = med_parcel_size), color = "#FFFFFF", hjust = 1.1) +
  coord_flip() +
  theme_hfv()

```

The top ten organizations who own the most land in jurisdictions along the I-95/I-64 corridor are listed below.The Presbyterian League of the Presbytery of Eastern Virginia owns the most acreage with 12 parcels that amount to 3,429 acres in New Kent County. 

```{r}
#| label: fig-local-own
#| fig-cap: "Top 5: Parcel count by owners in "

faith_mapped <- read_rds("data/faith_mapped.rds")|> 
  st_drop_geometry() |> 
  distinct(ll_uuid, .keep_all = TRUE) |> 
  filter(
    pdc == "Hampton Roads" | 
      pdc == "PlanRVA" |
      pdc == "Northern Virginia" |
      pdc == "George Washington")

faith_summary_local <- faith_mapped %>% 
  group_by(owner, jurisdiction) %>% 
  summarise(
    total_acres = sum(acres, na.rm = TRUE),
    med_parcel_size = median(acres, na.rm = TRUE),
    count = n_distinct(ll_uuid),
    .groups = "drop"
  ) %>% 
  mutate(
    jurisdiction = str_remove(jurisdiction, " County"),
    total_acres = round(total_acres, 2),
    med_parcel_size = round(med_parcel_size, 2)
  ) %>% 
  arrange(desc(total_acres)) %>%
  slice_head(n = 10) |> 
  mutate(owner = str_to_title(owner))


faith_summary_local |> 
  kbl(col.names = c("Owner", "Jurisdiction", "Total Acres", "Median Parcel Size", "Number of Parcels"), align = "lcccc") |> 
  kable_styling(bootstrap_options = c("striped", "condensed"))




```

## General Assembly Districts

The introduction of the Faith in Housing bill into the Virginia General Assembly presents an opportunity to also explore faith-based parcel ownership at based on house and senate districts. This provides state legislatures with a unique perspective on aspects of faith-based parcel ownership within their districts. 



### House Districts

```{r}
#| label: fig-parcels-hd
#| fig-cap: "Total parcels by House District"


# hd <- read_rds("data/rds/faith_house.rds")
# 
# # Function to create color palette based on Jenks breaks
# create_jenks_palette <- function(data, n_classes = 5) {
#   # Remove any NA values
#   data <- data[!is.na(data)]
#   
#   # Calculate Jenks breaks
#   breaks <- classIntervals(data, n = n_classes, style = "jenks")
#   
#   # Create a color palette
#   pal <- colorBin(
#     palette = "YlOrRd",
#     domain = data,
#     bins = breaks$brks,
#     pretty = FALSE
#   )
#   
#   return(pal)
# }
# 
# # Create the Jenks breaks color palette
# jenks_pal <- create_jenks_palette(hd$faith_house_count)
#   
# 
# # Create the leaflet map
# map_jenks <- leaflet(hd) %>%
#   addProviderTiles("CartoDB.Positron") %>%
#   addPolygons(
#     fillColor = ~jenks_pal(faith_house_count),
#     fillOpacity = 0.7,
#     color = "grey",
#     weight = 1,
#     popup = ~paste("House District:", NAMELSAD, "<br>Parcels:", label_count)
#   ) %>%
#   addLegend(
#     pal = jenks_pal,
#     values = hd$faith_house_count,
#     title = "Total Parcels",
#     position = "topleft"
#   )
# 
# saveWidget(map_jenks, "data/geo/hd_count.html")

# Display the map

knitr::include_url("data/geo/hd_count.html", height = "500px")


```


```{r}
#| label: fig-acres-hd
#| fig-cap: "Total acres by House District"


# hd <- read_rds("data/rds/faith_house.rds")
# 
# # Function to create color palette based on Jenks breaks
# create_jenks_palette <- function(data, n_classes = 5) {
#   # Remove any NA values
#   data <- data[!is.na(data)]
#   
#   # Calculate Jenks breaks
#   breaks <- classIntervals(data, n = n_classes, style = "jenks")
#   
#   # Create a color palette
#   pal <- colorBin(
#     palette = "YlGn",
#     domain = data,
#     bins = breaks$brks,
#     pretty = FALSE
#   )
#   
#   return(pal)
# }
# 
# # Create the Jenks breaks color palette
# jenks_pal <- create_jenks_palette(hd$faith_house_total_acres)
# 
# # Create the leaflet map
# map_jenks <- leaflet(hd) %>%
#   addProviderTiles("CartoDB.Positron") %>%
#   addPolygons(
#     fillColor = ~jenks_pal(faith_house_total_acres),
#     fillOpacity = 0.7,
#     color = "grey",
#     weight = 1,
#     popup = ~paste("House District:", NAMELSAD, "<br>Value:", label_acres)
#   ) %>%
#   addLegend(
#     pal = jenks_pal,
#     values = hd$faith_house_total_acres,
#     title = "Total Acres",
#     position = "topleft"
#   )
# 
# # Display the map
# saveWidget(map_jenks, "data/geo/hd_acres.html")

knitr::include_url("data/geo/hd_acres.html", height = "500px")


```

```{r}
#| label: fig-size-hd
#| fig-cap: "Median parcel size by House District"


# hd <- read_rds("data/rds/faith_house.rds")
# 
# # Function to create color palette based on Jenks breaks
# create_jenks_palette <- function(data, n_classes = 5) {
#   # Remove any NA values
#   data <- data[!is.na(data)]
#   
#   # Calculate Jenks breaks
#   breaks <- classIntervals(data, n = n_classes, style = "jenks")
#   
#   # Create a color palette
#   pal <- colorBin(
#     palette = "YlGnBu",
#     domain = data,
#     bins = breaks$brks,
#     pretty = FALSE
#   )
#   
#   return(pal)
# }
# 
# # Create the Jenks breaks color palette
# jenks_pal <- create_jenks_palette(hd$med_parcel_size)
# 
# # Create the leaflet map
# map_jenks <- leaflet(hd) %>%
#   addProviderTiles("CartoDB.Positron") %>%
#   addPolygons(
#     fillColor = ~jenks_pal(med_parcel_size),
#     fillOpacity = 0.7,
#     color = "grey",
#     weight = 1,
#     popup = ~paste("House District:", NAMELSAD, "<br>Value:", label_size)
#   ) %>%
#   addLegend(
#     pal = jenks_pal,
#     values = hd$med_parcel_size,
#     title = "Median Parcel Size",
#     position = "topleft"
#   )
# 
# # Display the map
# saveWidget(map_jenks, "data/geo/hd_size.html")

knitr::include_url("data/geo/hd_size.html", height = "500px")

```

### Senate Districts

```{r}
#| label: fig-parcels-sd
#| fig-cap: "Total parcels by Senate District"

# sd <- read_rds("data/rds/faith_senate.rds")
# 
# # Function to create color palette based on Jenks breaks
# create_jenks_palette <- function(data, n_classes = 5) {
#   # Remove any NA values
#   data <- data[!is.na(data)]
#   
#   # Calculate Jenks breaks
#   breaks <- classIntervals(data, n = n_classes, style = "jenks")
#   
#   # Create a color palette
#   pal <- colorBin(
#     palette = "YlOrRd",
#     domain = data,
#     bins = breaks$brks,
#     pretty = FALSE
#   )
#   
#   return(pal)
# }
# 
# # Create the Jenks breaks color palette
# jenks_pal <- create_jenks_palette(sd$faith_senate_count)
#   
# 
# # Create the leaflet map
# map_jenks <- leaflet(sd) %>%
#   addProviderTiles("CartoDB.Positron") %>%
#   addPolygons(
#     fillColor = ~jenks_pal(faith_senate_count),
#     fillOpacity = 0.7,
#     color = "grey",
#     weight = 1,
#     popup = ~paste("Senate District:", NAMELSAD, "<br>Parcels:", label_count)
#   ) %>%
#   addLegend(
#     pal = jenks_pal,
#     values = sd$faith_senate_count,
#     title = "Total Parcels",
#     position = "topleft"
#   )
# 
# # Display the map
# saveWidget(map_jenks, "data/geo/sd_count.html")

knitr::include_url("data/geo/sd_count.html", height = "500px")
```

```{r}
#| label: fig-acres-sd
#| fig-cap: "Total acres by Senate District"


# sd <- read_rds("data/rds/faith_senate.rds")
# 
# # Function to create color palette based on Jenks breaks
# create_jenks_palette <- function(data, n_classes = 5) {
#   # Remove any NA values
#   data <- data[!is.na(data)]
#   
#   # Calculate Jenks breaks
#   breaks <- classIntervals(data, n = n_classes, style = "jenks")
#   
#   # Create a color palette
#   pal <- colorBin(
#     palette = "YlGn",
#     domain = data,
#     bins = breaks$brks,
#     pretty = FALSE
#   )
#   
#   return(pal)
# }
# 
# # Create the Jenks breaks color palette
# jenks_pal <- create_jenks_palette(sd$faith_senate_total_acres)
# 
# # Create the leaflet map
# map_jenks <- leaflet(sd) %>%
#   addProviderTiles("CartoDB.Positron") %>%
#   addPolygons(
#     fillColor = ~jenks_pal(faith_senate_total_acres),
#     fillOpacity = 0.7,
#     color = "grey",
#     weight = 1,
#     popup = ~paste("Senate District:", NAMELSAD, "<br>Value:", label_acres)
#   ) %>%
#   addLegend(
#     pal = jenks_pal,
#     values = sd$faith_senate_total_acres,
#     title = "Total Acres",
#     position = "topleft"
#   )
# 
# # Display the map
# saveWidget(map_jenks, "data/geo/sd_acres.html")

knitr::include_url("data/geo/sd_acres.html", height = "500px")

```



```{r}
#| label: fig-size-sd
#| fig-cap: "Median parcel size by Senate District"


# sd <- read_rds("data/rds/faith_senate.rds")
# 
# # Function to create color palette based on Jenks breaks
# create_jenks_palette <- function(data, n_classes = 5) {
#   # Remove any NA values
#   data <- data[!is.na(data)]
#   
#   # Calculate Jenks breaks
#   breaks <- classIntervals(data, n = n_classes, style = "jenks")
#   
#   # Create a color palette
#   pal <- colorBin(
#     palette = "YlGnBu",
#     domain = data,
#     bins = breaks$brks,
#     pretty = FALSE
#   )
#   
#   return(pal)
# }
# 
# # Create the Jenks breaks color palette
# jenks_pal <- create_jenks_palette(sd$med_parcel_size)
# 
# # Create the leaflet map
# map_jenks <- leaflet(sd) %>%
#   addProviderTiles("CartoDB.Positron") %>%
#   addPolygons(
#     fillColor = ~jenks_pal(med_parcel_size),
#     fillOpacity = 0.7,
#     color = "grey",
#     weight = 1,
#     popup = ~paste("Senate District:", NAMELSAD, "<br>Value:", label_size)
#   ) %>%
#   addLegend(
#     pal = jenks_pal,
#     values = sd$med_parcel_size,
#     title = "Median Parcel Size",
#     position = "topleft"
#   )
# 
# # Display the map
# saveWidget(map_jenks, "data/geo/sd_size.html")

knitr::include_url("data/geo/sd_size.html", height = "500px")

```

## Northern Virginia

Conducting a spatial join in QGIS between the 652 identified parcels and the Northern Virginia Zoning Atlas resulted in 648 parcels retained. The four parcels that were removed were located in areas not covered by the Virginia Zoning Atlas, most likely to the area being deemed protected or undevelopable. 


```{r}
#| label: fig-nova-count

nova_zoning <- st_read("data/nova_faith_zoning.gpkg", quiet = TRUE)|> 
  st_drop_geometry() |> 
  distinct(ll_uuid, .keep_all = TRUE)


count_type_area <- nova_zoning |> 
  drop_na(jurisdiction_2) |> 
  group_by(jurisdiction_2) |> 
  summarise(acres = sum(acres),
            count = n_distinct(ll_uuid)
            )

ggplot(count_type_area,
       aes(x = reorder(jurisdiction_2, count),
           y = count)) +
  geom_col() +
  coord_flip()

```

```{r}
#| label: fig-nova-acres

nova_zoning <- st_read("data/nova_faith_zoning.gpkg", quiet = TRUE)|> 
  st_drop_geometry() |> 
  distinct(ll_uuid, .keep_all = TRUE)

count_type_area <- nova_zoning |> 
  drop_na(jurisdiction_2) |> 
  group_by(jurisdiction_2) |> 
  summarise(acres = sum(acres),
            count = n_distinct(ll_uuid)
            ) 

ggplot(count_type_area,
       aes(x = reorder(jurisdiction_2, acres),
           y = acres)) +
  geom_col(
    fill = "#40c0c0"
  ) +
  geom_text(aes(
    label = acres, 
    hjust = -0.1
    )) +
  coord_flip() +
  theme_hfv(
    base_size = 10
    ) +
  scale_y_continuous(
    labels = number_format(big.mark = ","),
    expand = expansion(mult = c(0, 0.01))
    ) +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.major.x = element_line(linewidth = 0.5)
    )

number_format()
```

```{r}
#| label: tbl-pct-1

library(DT)

percent_to_numeric <- function(x) {
  as.numeric(sub("%", "", x)) / 100
}

pct_tbl <- read_rds("data/rds/nova_byright_table.rds") |> 
  drop_na(jurisdiction) |> 
  mutate(across(3:5, .fns = ~ percent_to_numeric(.x)))

# pct_tbl |> 
#   arrange(desc(parcels)) |> 
#   kbl(col.names = c("Jurisdiction", "Parcel Count", "Single-Family", "Duplex", "Multifamily (3+)"),
#       align = "lcccc") |> 
#     kable_styling(bootstrap_options = c("striped", "condensed"))



datatable(pct_tbl, 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; text-align: left; color: grey; font-size: 20px; 
            font-family: "Open Sans", sans-serif;
            padding-bottom: 20px;
            font-weight: bold;
            ',
            'Percent of parcels zoned by-right'
          ),

          colnames = c("Jurisdiction", "Parcel Count", "Single-Family",
                       "Duplex", "Multifamily"),
          rownames = FALSE,
          options = list(
            pageLength = -1,  # Show all rows
            dom = 't',        # Remove search bar and other controls
            scrollY = "400px",  # Add vertical scrolling if needed
            scrollCollapse = TRUE,
            initComplete = JS(
              "function(settings, json) {",
              "$(this.api().table().header()).css({'font-family': 'Open Sans'});",
              "}"
          ),
            columnDefs = list(list(className = 'dt-center', targets = 1:4))  # Center-align columns 2-5
          ),
          style = "bootstrap",
          fillContainer = TRUE) %>%
  formatStyle(
    columns = 3,  # Single-Family
    background = styleColorBar(pct_tbl[, 3], '#40c0c0'),
    backgroundSize = '98% 88%',
    backgroundRepeat = 'no-repeat',
    backgroundPosition = 'center'
  ) %>%
  formatStyle(
    columns = 4,  # Duplex
    background = styleColorBar(pct_tbl[, 4], '#8b85ca'),
    backgroundSize = '98% 88%',
    backgroundRepeat = 'no-repeat',
    backgroundPosition = 'center'
  ) %>%
  formatStyle(
    columns = 5,  # Multifamily
    background = styleColorBar(pct_tbl[, 5], '#011e41'),
    backgroundSize = '98% 88%',
    backgroundRepeat = 'no-repeat',
    backgroundPosition = 'center'
  ) %>%
  formatPercentage(columns = 3:5, digits = 1) |> 
    formatStyle(names(pct_tbl),
              fontFamily = "Open Sans")




  
  


```

```{r}
#| label: tbl-pct-2


pct_bar <- read_rds("data/rds/nova_byright_table.rds") |> 
  drop_na(jurisdiction) |> 
  mutate(multifamily = (parse_number(multifamily))/100)

ggplot(pct_bar,
       aes(x = reorder(jurisdiction, multifamily),
           y = multifamily)) +
  geom_col(
    fill = "#40c0c0"
  ) +
  geom_text(aes(
    label = percent(multifamily, 2)), 
    hjust = -0.1
    ) +
  coord_flip() +
  theme_hfv(
    base_size = 10
    ) +
  scale_y_continuous(
    labels = percent_format(),
    expand = expansion(mult = c(0, 0.01)),
    limits = c(0, 1.01)
    ) +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.major.x = element_line(linewidth = 0.5)
    )

```

